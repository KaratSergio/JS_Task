{"version":3,"file":"commonHelpers.js","sources":["../src/js/console.js","../src/js/task-1.js","../src/js/task-2.js"],"sourcesContent":["// скрипт для виводу результатів Console на сторінку\n\n(() => {\n  const originalLog = console.log;\n  const originalWarn = console.warn;\n  const originalError = console.error;\n\n  const consoleOutput = document.getElementById('console-output');\n\n  if (consoleOutput) {\n    function addMessage(type, ...args) {\n      const msg = document.createElement('div');\n\n      const formattedArgs = args.map(arg => {\n        if (arg instanceof Set) {\n          return `Set { ${[...arg].join(', ')} }`;\n        } else if (arg instanceof Map) {\n          return `Map { ${[...arg]\n            .map(([key, value]) => `${key} => ${value}`)\n            .join(', ')} }`;\n        } else if (Array.isArray(arg)) {\n          return `Array [ ${arg.join(', ')} ]`;\n        } else if (typeof arg === 'object' && arg !== null) {\n          return `Object ${JSON.stringify(arg, null, 2)}`;\n        } else if (typeof arg === 'string') {\n          return `\"${arg}\"`;\n        } else if (arg === null) {\n          return 'null';\n        } else if (arg === undefined) {\n          return 'undefined';\n        } else {\n          return String(arg);\n        }\n      });\n\n      msg.textContent = `[${type}] ${formattedArgs.join(' ')}`;\n      consoleOutput.appendChild(msg);\n    }\n\n    console.log = function (...args) {\n      originalLog.apply(console, args);\n      addMessage('LOG', ...args);\n    };\n\n    console.warn = function (...args) {\n      originalWarn.apply(console, args);\n      addMessage('WARN', ...args);\n    };\n\n    console.error = function (...args) {\n      originalError.apply(console, args);\n      addMessage('ERROR', ...args);\n    };\n\n    window.onerror = function (msg, url, lineNo, columnNo, error) {\n      const message = `${msg} at ${url}:${lineNo}:${columnNo}`;\n      addMessage('ERROR', message);\n      return false;\n    };\n  }\n})();\n","// ЧАСОВІ АЛГОРИТМИ\n\n// ====== Константна часова складність О(1) =====\nfunction getFirstItem(items) {\n  // Завжди виконується одна операція, незалежно від розміру списку\n  return items[0];\n}\n// console.log(getFirstItem([1, 2, 3, 4, 5]));\n\n// ====== Лінійна часова складність О(n) ======\nfunction printAllItems(items) {\n  for (const item of items) {\n    // Кількість операцій прямо пропорційна кількості елементів у списку\n    // console.log(item);\n  }\n}\n\n// ====== Квадратична часова складність O(n2) ======\nprintAllItems([1, 2, 3, 4, 5]);\n\nfunction insertionSort(arr) {\n  const n = arr.length;\n  for (let i = 1; i < n; i++) {\n    const key = arr[i];\n    let j = i - 1;\n    while (j >= 0 && key < arr[j]) {\n      arr[j + 1] = arr[j];\n      j--;\n    }\n    arr[j + 1] = key;\n  }\n}\n\n// Приклад використання:\nconst numbers = [12, 11, 13, 5, 6];\ninsertionSort(numbers);\n// console.log('Відсортований масив:', numbers);\n\n// ====== Квадратична часова складність O(n3) ======\nfunction multiplyMatrices(A, B) {\n  const n = A.length;\n  const C = new Array(n).fill(0).map(() => new Array(n).fill(0));\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      for (let k = 0; k < n; k++) {\n        C[i][j] += A[i][k] * B[k][j];\n      }\n    }\n  }\n\n  return C;\n}\n\nconst A = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n];\nconst B = [\n  [10, 11, 12],\n  [13, 14, 15],\n  [16, 17, 18],\n];\n\n// console.log(multiplyMatrices(A, B));\n\n// ПРОСТОРОВІ АЛГОРИТМИ\n\n// ====== Просторова складність О(1)======\nfunction getItemByIndex(items, index) {\n  return items[index];\n}\n\n// Приклад використання\nconst items = [1, 2, 3, 4, 5];\nconst index = 2;\n// console.log(getItemByIndex(items, index));\n\n// ====== Просторова складність О(n)======\nfunction reverseList(items) {\n  return items.slice().reverse();\n}\n\n// Приклад використання\nconst originalList = [1, 2, 3, 4, 5];\nconst reversedList = reverseList(originalList);\n// console.log(reversedList);\n\n// ====== Просторова складність О(n2)======\nfunction generatePairs(items) {\n  const pairs = [];\n\n  for (let i = 0; i < items.length; i++) {\n    for (let j = i + 1; j < items.length; j++) {\n      pairs.push([items[i], items[j]]);\n    }\n  }\n\n  return pairs;\n}\n\n// Приклад використання\nconst itemsY = [1, 2, 3, 4];\n// console.log(generatePairs(itemsY));\n","//* Array\nconst array = [1, 2, 3, 4, 5, 6];\n// console.log(array);\n// [LOG] [1,2,3,4,5,6]\n\nconst result = array.map(element => element + 2);\n// console.log(result);\n// [LOG] [3,4,5,6,7,8]\n\n//* Dictionaries\nconst myObj = { name: 'Bob', age: '43' };\n\nmyObj.age = 51; // update value\n\nmyObj.city = 'Buffalo'; // add new key & value\n\ndelete myObj.age; // delete key\n\n// console.log(myObj);\n//[LOG] {\"name\":\"Bob\",\"city\":\"Buffalo\"}\n\n// console.log(myObj['name']);\n//[LOG] Bob\n\n//* Sets\nconst mySet = new Set([1, 2, 3, 4, 5]);\n// console.log(mySet);\n// [LOG]Set { 1, 2, 3, 4, 5 }\nmySet.add(6);\n// console.log(mySet);\n// [LOG]Set { 1, 2, 3, 4, 5, 6 }\nmySet.delete(1);\n// console.log(mySet);\n// [LOG]Set { 2, 3, 4, 5, 6 }\n\nconst set1 = new Set([1, 2, 3, 4, 5]);\nconst set2 = new Set([4, 5, 6, 7, 8]);\n//*union\nconst unionSet = new Set([...set1, ...set2]);\n// console.log(unionSet);\n// [LOG]Set { 1, 2, 3, 4, 5, 6, 7, 8 }\n\n//*intersection\nconst intersectionSet = new Set([...set1].filter(x => set2.has(x)));\n// console.log(intersectionSet);\n// [LOG]Set { 4, 5 }\n\n//*difference\nconst differenceSet = new Set([...set1].filter(x => !set2.has(x)));\n// console.log(differenceSet);\n// [LOG]Set { 1, 2, 3 }\nconst symmetricDifferenceSet = new Set(\n  [...set1]\n    .filter(x => !set2.has(x))\n    .concat([...set2].filter(x => !set1.has(x)))\n);\n// console.log(symmetricDifferenceSet);\n// [LOG]Set { 1, 2, 3, 6, 7, 8 }\n"],"names":["originalLog","originalWarn","originalError","consoleOutput","addMessage","type","args","msg","formattedArgs","arg","key","value","url","lineNo","columnNo","error","message","printAllItems","items","item","insertionSort","arr","n","j","numbers","reverseList","originalList","mySet","set1","set2","x"],"mappings":"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"}