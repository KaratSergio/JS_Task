{"version":3,"file":"commonHelpers.js","sources":["../src/js/console.js","../src/js/task-1.js","../src/js/task-2.js","../src/js/task-3.js","../src/js/task-4.js","../src/js/task-5.js"],"sourcesContent":["// скрипт для виводу результатів Console на сторінку\n\n(() => {\n  const originalLog = console.log;\n  const originalWarn = console.warn;\n  const originalError = console.error;\n\n  const consoleOutput = document.getElementById('console-output');\n\n  if (consoleOutput) {\n    function addMessage(type, ...args) {\n      const msg = document.createElement('div');\n\n      const formattedArgs = args.map(arg => {\n        if (arg instanceof Set) {\n          return `Set { ${[...arg].join(', ')} }`;\n        } else if (arg instanceof Map) {\n          return `Map { ${[...arg]\n            .map(([key, value]) => `${key} => ${value}`)\n            .join(', ')} }`;\n        } else if (Array.isArray(arg)) {\n          return `Array [ ${arg.join(', ')} ]`;\n        } else if (typeof arg === 'object' && arg !== null) {\n          return `Object ${JSON.stringify(arg, null, 2)}`;\n        } else if (typeof arg === 'string') {\n          return `\"${arg}\"`;\n        } else if (arg === null) {\n          return 'null';\n        } else if (arg === undefined) {\n          return 'undefined';\n        } else {\n          return String(arg);\n        }\n      });\n\n      msg.textContent = `[${type}] ${formattedArgs.join(' ')}`;\n      consoleOutput.appendChild(msg);\n    }\n\n    console.log = function (...args) {\n      originalLog.apply(console, args);\n      addMessage('LOG', ...args);\n    };\n\n    console.warn = function (...args) {\n      originalWarn.apply(console, args);\n      addMessage('WARN', ...args);\n    };\n\n    console.error = function (...args) {\n      originalError.apply(console, args);\n      addMessage('ERROR', ...args);\n    };\n\n    window.onerror = function (msg, url, lineNo, columnNo, error) {\n      const message = `${msg} at ${url}:${lineNo}:${columnNo}`;\n      addMessage('ERROR', message);\n      return false;\n    };\n  }\n})();\n","// ЧАСОВІ АЛГОРИТМИ\n\n// ====== Константна часова складність О(1) =====\nfunction getFirstItem(items) {\n  // Завжди виконується одна операція, незалежно від розміру списку\n  return items[0];\n}\n// console.log(getFirstItem([1, 2, 3, 4, 5]));\n\n// ====== Лінійна часова складність О(n) ======\nfunction printAllItems(items) {\n  for (const item of items) {\n    // Кількість операцій прямо пропорційна кількості елементів у списку\n    // console.log(item);\n  }\n}\n\n// ====== Квадратична часова складність O(n2) ======\nprintAllItems([1, 2, 3, 4, 5]);\n\nfunction insertionSort(arr) {\n  const n = arr.length;\n  for (let i = 1; i < n; i++) {\n    const key = arr[i];\n    let j = i - 1;\n    while (j >= 0 && key < arr[j]) {\n      arr[j + 1] = arr[j];\n      j--;\n    }\n    arr[j + 1] = key;\n  }\n}\n\n// Приклад використання:\nconst numbers = [12, 11, 13, 5, 6];\ninsertionSort(numbers);\n// console.log('Відсортований масив:', numbers);\n\n// ====== Квадратична часова складність O(n3) ======\nfunction multiplyMatrices(A, B) {\n  const n = A.length;\n  const C = new Array(n).fill(0).map(() => new Array(n).fill(0));\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      for (let k = 0; k < n; k++) {\n        C[i][j] += A[i][k] * B[k][j];\n      }\n    }\n  }\n\n  return C;\n}\n\nconst A = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n];\nconst B = [\n  [10, 11, 12],\n  [13, 14, 15],\n  [16, 17, 18],\n];\n\n// console.log(multiplyMatrices(A, B));\n\n// ПРОСТОРОВІ АЛГОРИТМИ\n\n// ====== Просторова складність О(1)======\nfunction getItemByIndex(items, index) {\n  return items[index];\n}\n\n// Приклад використання\nconst items = [1, 2, 3, 4, 5];\nconst index = 2;\n// console.log(getItemByIndex(items, index));\n\n// ====== Просторова складність О(n)======\nfunction reverseList(items) {\n  return items.slice().reverse();\n}\n\n// Приклад використання\nconst originalList = [1, 2, 3, 4, 5];\nconst reversedList = reverseList(originalList);\n// console.log(reversedList);\n\n// ====== Просторова складність О(n2)======\nfunction generatePairs(items) {\n  const pairs = [];\n\n  for (let i = 0; i < items.length; i++) {\n    for (let j = i + 1; j < items.length; j++) {\n      pairs.push([items[i], items[j]]);\n    }\n  }\n\n  return pairs;\n}\n\n// Приклад використання\nconst itemsY = [1, 2, 3, 4];\n// console.log(generatePairs(itemsY));\n","//* Array\nconst array = [1, 2, 3, 4, 5, 6];\n// console.log(array);\n// [LOG] [1,2,3,4,5,6]\n\nconst result = array.map(element => element + 2);\n// console.log(result);\n// [LOG] [3,4,5,6,7,8]\n\n//* Dictionaries\nconst myObj = { name: 'Bob', age: '43' };\n\nmyObj.age = 51; // update value\n\nmyObj.city = 'Buffalo'; // add new key & value\n\ndelete myObj.age; // delete key\n\n// console.log(myObj);\n//[LOG] {\"name\":\"Bob\",\"city\":\"Buffalo\"}\n\n// console.log(myObj['name']);\n//[LOG] Bob\n\n//* Sets\nconst mySet = new Set([1, 2, 3, 4, 5]);\n// console.log(mySet);\n// [LOG]Set { 1, 2, 3, 4, 5 }\nmySet.add(6);\n// console.log(mySet);\n// [LOG]Set { 1, 2, 3, 4, 5, 6 }\nmySet.delete(1);\n// console.log(mySet);\n// [LOG]Set { 2, 3, 4, 5, 6 }\n\nconst set1 = new Set([1, 2, 3, 4, 5]);\nconst set2 = new Set([4, 5, 6, 7, 8]);\n//*union\nconst unionSet = new Set([...set1, ...set2]);\n// console.log(unionSet);\n// [LOG]Set { 1, 2, 3, 4, 5, 6, 7, 8 }\n\n//*intersection\nconst intersectionSet = new Set([...set1].filter(x => set2.has(x)));\n// console.log(intersectionSet);\n// [LOG]Set { 4, 5 }\n\n//*difference\nconst differenceSet = new Set([...set1].filter(x => !set2.has(x)));\n// console.log(differenceSet);\n// [LOG]Set { 1, 2, 3 }\nconst symmetricDifferenceSet = new Set(\n  [...set1]\n    .filter(x => !set2.has(x))\n    .concat([...set2].filter(x => !set1.has(x)))\n);\n// console.log(symmetricDifferenceSet);\n// [LOG]Set { 1, 2, 3, 6, 7, 8 }\n","//*Stacks LIFO — (Last In, First Out)\n\nconst stack = [];\nstack.push('a');\nstack.push('b');\nstack.push('c');\n\n// console.log(stack);\n// [LOG] Array [ a, b, c ]\n\n// console.log(stack.pop());\n// [LOG] \"c\"\n\n// console.log(stack);\n// [LOG] Array [ a, b ]\n\n//*Peek (або Top)\n\nfunction peek(stack) {\n  return stack[stack.length - 1];\n}\n\n// console.log(peek(stack));\n// [LOG] \"c\"\n\nfunction isEmpty(stack) {\n  return stack.length === 0;\n}\n\n// console.log(isEmpty(stack));\n// [LOG] false\n\nclass Stack {\n  constructor() {\n    this.stack = [];\n  }\n\n  //add item in stack\n  push(item) {\n    this.stack.push(item);\n  }\n\n  //delete item in stack\n  pop() {\n    if (this.stack.length < 1) {\n      return null;\n    }\n    return this.stack.pop();\n  }\n\n  //check stack isEmpty\n\n  isEmpty() {\n    return this.stack.length === 0;\n  }\n\n  //View the top item of the stack without removing it\n\n  peek() {\n    if (!this.isEmpty()) {\n      return this.stack[this.stack.length - 1];\n    }\n  }\n}\n\nconst s = new Stack();\ns.push('x');\ns.push('y');\ns.push('z');\n\n// console.log(s.peek());\n// [LOG] \"z\"\n\n// console.log(s.pop());\n// [LOG] \"z\"\n\n// console.log(s.peek());\n// [LOG] \"y\"\n\n// console.log(s.isEmpty());\n// [LOG] false\n","//*Queue FIFO (First In First Out)\n\nclass Queue {\n  constructor() {\n    this.elements = {};\n    this.head = 0;\n    this.tail = 0;\n  }\n\n  enqueue(element) {\n    this.elements[this.tail] = element;\n    this.tail++;\n  }\n\n  dequeue() {\n    const item = this.elements[this.head];\n    delete this.elements[this.head];\n    this.head++;\n    return item;\n  }\n\n  peek() {\n    return this.elements[this.head];\n  }\n\n  get length() {\n    return this.tail - this.head;\n  }\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n}\n\nconst q = new Queue();\n\nq.enqueue('a');\nq.enqueue('b');\nq.enqueue('c');\n\n// console.log(q.elements);\n// [LOG] Object { \"0\": \"a\", \"1\": \"b\", \"2\": \"c\" }\n\nq.dequeue();\n\n// console.log(q.elements);\n// [LOG] Object { \"1\": \"b\", \"2\": \"c\" }\n\nclass Client {\n  constructor(name) {\n    this.name = name;\n    this.operations = Math.floor(Math.random() * 5) + 1;\n    this.serviceTime = this.operations * 1000;\n  }\n}\n\nclass Bank {\n  constructor() {\n    this.clients = new Queue();\n    this.totalServiceTime = 0;\n  }\n\n  newClient(client) {\n    this.clients.enqueue(client);\n  }\n\n  async serveClients() {\n    while (!this.clients.isEmpty) {\n      const currentClient = this.clients.dequeue();\n\n      console.log(\n        `Обслуговуємо клієнта ${currentClient.name} з ${currentClient.operations} операцій`\n      );\n\n      this.totalServiceTime += currentClient.serviceTime;\n      await new Promise(resolve =>\n        setTimeout(resolve, currentClient.serviceTime)\n      );\n\n      console.log(`Клієнта ${currentClient.name} обслуговано.`);\n    }\n    console.log(\n      `Всі клієнти обслуговані. Загальний час обслуговування: ${\n        this.totalServiceTime / 1000\n      } секунд.`\n    );\n  }\n}\n\nconst bank = new Bank();\n\nfor (let i = 0; i < 5; i++) {\n  bank.newClient(new Client(`Client-${i}`));\n}\n\n// bank.serveClients();\n\n// Result:\n\n// [LOG] \"Обслуговуємо клієнта Client-0 з 1 операцій\"\n// [LOG] \"Клієнта Client-0 обслуговано.\"\n// [LOG] \"Обслуговуємо клієнта Client-1 з 3 операцій\"\n// [LOG] \"Клієнта Client-1 обслуговано.\"\n// [LOG] \"Обслуговуємо клієнта Client-2 з 3 операцій\"\n// [LOG] \"Клієнта Client-2 обслуговано.\"\n// [LOG] \"Обслуговуємо клієнта Client-3 з 5 операцій\"\n// [LOG] \"Клієнта Client-3 обслуговано.\"\n// [LOG] \"Обслуговуємо клієнта Client-4 з 1 операцій\"\n// [LOG] \"Клієнта Client-4 обслуговано.\"\n// [LOG] \"Всі клієнти обслуговані. Загальний час обслуговування: 13 секунд.\"\n","//* deque (double-ended queue)\nimport Deque from 'double-ended-queue';\n\nconst deque = new Deque();\n\n// Додаємо елементи в дек\ndeque.push(1); // Додає елемент в кінець\ndeque.unshift(2); // Додає елемент на початок\n\n// Виведення та видалення елементів\n// console.log(deque.pop()); // Видаляє і повертає елемент з кінця -> 1\n// console.log(deque.shift()); // Видаляє і повертає елемент з початку -> 2\n\n// Додаємо кілька елементів\ndeque.push(3);\ndeque.push(4);\ndeque.push(5);\n\n// Доступ до елементів\n// console.log(deque.peekFront()); // Отримує перший елемент -> 3\n// console.log(deque.peekBack()); // Отримує останній елемент -> 5\n\n// Отримання розміру черги\n// console.log(deque.length); // Output: 3\n\n// Перевірка, чи порожня черга\n// console.log(deque.isEmpty()); // Output: false\n\n// Видаляємо всі елементи\ndeque.clear();\n// console.log(deque.isEmpty()); // Output: true\n"],"names":["originalLog","originalWarn","originalError","consoleOutput","addMessage","type","args","msg","formattedArgs","arg","key","value","url","lineNo","columnNo","error","message","printAllItems","items","item","insertionSort","arr","i","j","numbers","reverseList","originalList","mySet","set1","set2","x","Stack","s","Queue","element","q","Client","name","Bank","client","currentClient","resolve","bank","deque","Deque"],"mappings":"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"}